// ===========================================
// 1. LOAD TERRACLIMATE & SELECT BASELINE (2001–2020)
// ===========================================
var tc = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE')
  .filterDate('2001-01-01', '2020-12-31')
  // pr = monthly total precipitation (mm/month)
  // pet = monthly potential evapotranspiration (mm/month)
  // tmmx = monthly mean daily max temp (°C)
  // tmmn = monthly mean daily min temp (°C)
  .select(['pr','pet','tmmx','tmmn']);

// ===========================================
// 2. COMPUTE MONTHLY CLIMATOLOGY + MONTHLY MEAN T
// ===========================================
var months = ee.List.sequence(1, 12);
var monthlyClim = ee.ImageCollection(
  months.map(function(m) {
    m = ee.Number(m);
    // average all Januaries, all Februaries, etc.
    var clim = tc
      .filter(ee.Filter.calendarRange(m, m, 'month'))
      .mean()
      .set('month', m);
    // add a monthly mean temperature band
    var tmean = clim.select('tmmx')
      .add(clim.select('tmmn'))
      .divide(2)
      .rename('tmean');
    return clim.addBands(tmean);
  })
);

// ===========================================
// 3. ANNUAL TOTALS: PRECIPITATION & PET
// ===========================================
// Annual precipitation (mm/year)
var P_ann = monthlyClim.select('pr').sum().rename('P_ann');
// Annual potential evapotranspiration (mm/year)
var PET_ann = monthlyClim.select('pet').sum().rename('PET_ann');

// ===========================================
// 4. ARIDITY INDEX & BASE CLASSIFICATION
// ===========================================
// Aridity Index = P_ann / PET_ann
var AI = P_ann.divide(PET_ann).rename('AI');

// 0 = Arid, 1 = Semi-arid, 2 = Sub-humid, 3 = Humid
var aridity = ee.Image(3)  // default = Humid
  .where(AI.lt(0.105), 2)   // Sub-humid
  .where(AI.lt(0.04),  1)   // Semi-arid
  .where(AI.lt(0.02),  0)   // Arid
  .rename('aridity')
  .updateMask(AI.mask());

// ===========================================
// 5. EXTRACT PRECIP IN WARMEST & COLDEST MONTHS
// ===========================================
// 5a) Find pixel-wise warmest and coldest month temperatures
var maxT = monthlyClim.select('tmean').reduce(ee.Reducer.max());
var minT = monthlyClim.select('tmean').reduce(ee.Reducer.min());

// 5b) Precip in the warmest month
var P_warm = monthlyClim.map(function(img) {
  var mask = img.select('tmean').eq(maxT);
  return img.select('pr').updateMask(mask);
})
.sum()
.rename('P_warm');

// 5c) Precip in the coldest month
var P_cold = monthlyClim.map(function(img) {
  var mask = img.select('tmean').eq(minT);
  return img.select('pr').updateMask(mask);
})
.sum()
.rename('P_cold');

// ===========================================
// 6. FINAL CLIMATE CLASSIFICATION
//    0 = Arid
//    1 = Semi-arid
//    2 = Sub-humid
//    3 = Humid
//    4 = Monsoon (P_warm ≥ 0.9·P_cold)
//    5 = Mediterranean (P_cold ≥ 0.9·P_warm)
// ===========================================
var climateClass = aridity
  // Monsoon where not desert and P_warm ≥ 0.9 × P_cold
  .where(aridity.neq(0).and(P_warm.divide(P_cold).gte(0.9)), 4)
  // Mediterranean where not desert and P_cold ≥ 0.9 × P_warm
  .where(aridity.neq(0).and(P_cold.divide(P_warm).gte(0.9)), 5)
  .rename('climateClass');

// ===========================================
// 7. DISPLAY
// ===========================================
Map.setCenter(0, 20, 2);
Map.addLayer(climateClass, {
  min: 0,
  max: 5,
  palette: [
    '#d73027', // 0 = Arid
    '#ffa500', // 1 = Semi-arid
    '#a6d96a', // 2 = Sub-humid
    '#1a9850', // 3 = Humid
    '#800080', // 4 = Monsoon
    '#ffd700'  // 5 = Mediterranean
  ]
}, 'Climate Classes (0–5)', true, 0.5);
