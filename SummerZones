
// 1. Load the WorldClim bioclimatic image (1970–2000 averages)
var worldClim = ee.Image('WORLDCLIM/V1/BIO');

// 2. Compute “Max Temperature of Warmest Month” (bio05) in °F for global
var hottestF_global = worldClim
  .select('bio05')
  .divide(10)              // tenths °C → °C
  .multiply(9/5)
  .add(32);

// 3. Define a reusable classification function for summer zones:
//    1 = Wasteland (X):            > 110°F
//    2 = Very Hot Summer (Z1):      100–110°F
//    3 = Hot Summer (Z2):           90–100°F
//    4 = Very Warm Summer (A1):     80–90°F
//    5 = Warm Summer (A2):          70–80°F
//    6 = Mild Summer (B1):          60–70°F
//    7 = Cold Summer (B2):          50–60°F
//    8 = Very Cold Summer (C1):     40–50°F
//    9 = Freezing Summer (C2):      30–40°F
//   10 = Frigid Summer:             < 30°F
function classifySummer(tempF) {
  return ee.Image(0)
    .where(tempF.gt(110),                                   1)
    .where(tempF.gt(100).and(tempF.lte(110)),               2)
    .where(tempF.gt(90).and(tempF.lte(100)),                3)
    .where(tempF.gt(80).and(tempF.lte(90)),                 4)
    .where(tempF.gt(70).and(tempF.lte(80)),                 5)
    .where(tempF.gt(60).and(tempF.lte(70)),                 6)
    .where(tempF.gt(50).and(tempF.lte(60)),                 7)
    .where(tempF.gt(40).and(tempF.lte(50)),                 8)
    .where(tempF.gt(30).and(tempF.lte(40)),                 9)
    .where(tempF.lte(30),                                   10)
    .rename('hottest_month_zone');
}

// 4. Classify the global data
var zonesGlobal = classifySummer(hottestF_global);

// 5. Build an Antarctica mask from LSIB boundaries
var antarcticaFC = ee.FeatureCollection('USDOS/LSIB_SIMPLE/2017')
  .filter(ee.Filter.eq('country_na', 'Antarctica'));
var antarcticaMask = ee.Image.constant(1)
  .clip(antarcticaFC)
  .unmask(0);

// 6. Load ERA5 MONTHLY, convert mean 2 m air temperature to °F,
//    then find each pixel’s warmest‐month temperature over Antarctica
var era5Monthly = ee.ImageCollection('ECMWF/ERA5/MONTHLY')
  .select('mean_2m_air_temperature')
  .map(function(img) {
    return img
      .subtract(273.15)       // K → °C
      .multiply(9/5)
      .add(32)
      .rename('tempF')
      .set('system:time_start', img.get('system:time_start'));
  });

var hottestF_antarctica = era5Monthly
  .reduce(ee.Reducer.max())
  .rename('hottest_month_tempF');

// 7. Classify the Antarctica‐only data
var zonesAnt = classifySummer(hottestF_antarctica);

// 8. Mask each classification to its domain and blend
var zonesGlobalMasked = zonesGlobal.updateMask(antarcticaMask.eq(0));
var zonesAntMasked    = zonesAnt.updateMask(antarcticaMask.eq(1));
var zonesCombined     = zonesGlobalMasked.blend(zonesAntMasked)
  .rename('hottest_month_zone');

// 9. Display with 50% opacity using a 10-color palette
var palette = [
  '#8B0000', // 1 Wasteland (X)
  '#FF4500', // 2 Very Hot Summer (Z1)
  '#FF8C00', // 3 Hot Summer (Z2)
  '#FFD700', // 4 Very Warm Summer (A1)
  '#ADFF2F', // 5 Warm Summer (A2)
  '#7FFF00', // 6 Mild Summer (B1)
  '#00FA9A', // 7 Cold Summer (B2)
  '#1E90FF', // 8 Very Cold Summer (C1)
  '#4169E1', // 9 Freezing Summer (C2)
  '#4B0082', // 10 Frigid Summer
  '#ADD8E6'  // 11 No data
];

Map.setCenter(0, 20, 2);
Map.addLayer(
  zonesCombined,
  {min: 1, max: 11, palette: palette},
  'Warmest‐Month Temp Zones',
  true,
  0.5
);

// 10. Map numeric codes to descriptive names
var zoneNames = {
   1: 'Wasteland (X)',
   2: 'Very Hot Summer (Z1)',
   3: 'Hot Summer (Z2)',
   4: 'Very Warm Summer (A1)',
   5: 'Warm Summer (A2)',
   6: 'Mild Summer (B1)',
   7: 'Cold Summer (B2)',
   8: 'Very Cold Summer (C1)',
   9: 'Freezing Summer (C2)',
  10: 'Frigid Summer',
  11: 'No data'
};

// 11. Build an info‐panel in the lower left
var infoPanel = ui.Panel({
  style: {
    position:        'bottom-left',
    padding:         '8px',
    backgroundColor: 'rgba(255,255,255,0.7)'
  }
});
var infoLabel = ui.Label('Click on the map to identify summer zone');
infoPanel.add(infoLabel);
ui.root.add(infoPanel);

// 12. On click, sample the combined zones and update the panel
Map.onClick(function(coords) {
  var pt = ee.Geometry.Point([coords.lon, coords.lat]);
  zonesCombined.reduceRegion({
    reducer:  ee.Reducer.first(),
    geometry: pt,
    scale:    10000
  }).get('hottest_month_zone')
    .evaluate(function(code) {
      var name = zoneNames[code] || 'No data';
      infoLabel.setValue(
        'Coords [' +
          coords.lon.toFixed(2) + ', ' +
          coords.lat.toFixed(2) +
        '] → ' + name
      );
    });
});
