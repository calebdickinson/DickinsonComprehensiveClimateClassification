/***** CHELSA 2100 Summer Map (uses your uploaded .tif assets) *****/

var ASSET_ROOT = 'projects/ordinal-crowbar-459807-m2/assets'; // <- change if needed
var YEAR = 2100; //2025 or 2100

// helper: "01".."12"
function pad2(n){ return (n < 10 ? '0' : '') + n; }
var monthsJS = [1,2,3,4,5,6,7,8,9,10,11,12];

// force ~30 arc-seconds (≈ 0.0083333° ≈ 926.67 m at equator)
var ARCSEC30_M = (30.0 / 3600.0) * 111320.0;

// ---- Load CHELSA monthly tas in °C (already Celsius from your converter) ----
var tasImages = monthsJS.map(function(m){
  var id = ASSET_ROOT + '/tas_' + YEAR + '_' + pad2(m);   // e.g. .../tas_2100_01
  var date = ee.Date.fromYMD(YEAR, m, 15);
  return ee.Image(id)
    .select(0).rename('tasC')                    // band b1 -> tasC (°C)
    .resample('bilinear')
    .reproject({crs: 'EPSG:4326', scale: ARCSEC30_M})
    .set('month', m)
    .set('system:time_start', date.millis());
});
var monthlyTas = ee.ImageCollection(tasImages);

// ---- Hottest & coldest month (if you want coldest for other uses) ----
var hottestC = monthlyTas.qualityMosaic('tasC')
  .select('tasC').rename('hottestC');

var coldestC = monthlyTas.map(function(img){
    return img.multiply(-1).copyProperties(img);
  })
  .qualityMosaic('tasC')
  .multiply(-1)
  .select('tasC').rename('coldestC');

// ---- Summer classification by hottest-month temperature ----
function classifySummer(tC) {
  return ee.Image(0)
    .where(tC.gte(50).and(tC.lt(100)), 10)  // Hypercaneal
    .where(tC.gte(40).and(tC.lt(50)),   9)  // X1: Extreme Hyperthermal Summer
    .where(tC.gte(35).and(tC.lt(40)),   8)  // Z2: Hyperthermal Summer
    .where(tC.gte(30).and(tC.lt(35)),   7)  // Z1: Scorching Hot Summer
    .where(tC.gte(25).and(tC.lt(30)),   6)  // A2: Very Hot Summer
    .where(tC.gte(20).and(tC.lt(25)),   5)  // A1: Hot Summer
    .where(tC.gte(15).and(tC.lt(20)),   4)  // B2: Mild Summer
    .where(tC.gte(10).and(tC.lt(15)),   3)  // B1: Cold Summer
    .where(tC.gte(5).and(tC.lt(10)),    2)  // C2: Very Cold Summer
    .where(tC.gte(0).and(tC.lt(5)),     1)  // C1: Freezing Summer
    .where(tC.lt(0),                    0)  // Y: Frigid Summer
    .rename('warmZone')
    .updateMask(tC.mask());
}

var warmZone = classifySummer(hottestC);

// ---- Palette & render ----
var codeColorMap = {
  10:"#0000FF", // Hypercaneal
  9:"#000000",  // X1: Extreme Hyperthermal Summer
  8:"#550000",  // Z2: Hyperthermal Summer
  7:"#C71585",  // Z1: Scorching Hot Summer
  6:"#FF0000",  // A2: Very Hot Summer 
  5:"#FFA500",  // A1: Hot Summer
  4:"#FFFF00",  // B2: Mild Summer
  3:"#008000",  // B1: Cold Summer
  2:"#0000FF",  // C2: Very Cold Summer
  1:"#FF10F0",  // C1: Freezing Summer
  0:"#000000"   // Y: Frigid Summer
};
var keys    = Object.keys(codeColorMap);
var codes   = keys.map(function(k){ return parseInt(k,10); });
var palette = keys.map(function(k){ return codeColorMap[k]; });
var indices = codes.map(function(_, i){ return i; });

var discrete = warmZone.remap(codes, indices).rename('classIndex');

// Center roughly on first image footprint (optional)
Map.centerObject(ee.Image(tasImages[0]), 3);

Map.addLayer(
  discrete,
  {min: 0, max: indices.length - 1, palette: palette},
  'Climate (CHELSA 2100 summer)',
  true, 0.7
);

// (Optional diagnostic layer)
// Map.addLayer(hottestC, {min:0, max:45, palette:['#0011ff','#88ccff','#ffffcc','#ff9900','#cc0000']}, 'Hottest month (°C)', false);
